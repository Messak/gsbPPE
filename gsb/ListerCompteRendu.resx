<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridColumnNumRapport.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridColumnrapDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridColumnDateVisite.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridColumnPraticien.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridColumnEditer.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridColumnSupprimer.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dataGridViewImageColumn2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAATASURBVEhL3ZV7TFN3FMfBKMbMbC7L/tqfy5Ysc+6pzIEIdqWCCDLMxjaWoMjIYOCmbmZxumS4
        LDGZwpwzmXEsOgRFNzDqYCIgINg3SN+U0hZoe9vePu8tt0/3/TXXMKID/t5JPjm/3t895/zuefya8v8V
        xbsFO0zHv29X11RU8Y/mibhYtNrwzcFfjN8dvqbYmb+Of7w0kRUJc+nbPa5EPG7nHPYJdd3H+/itpAwU
        Clfovz7QHue4KN7RTZ//1aB8v2gtv72wyAq2bLO1nndwDltgrLLM6JUMW0LmycDYnrIKst+5dXOq7uDe
        kzGGmbW1nHPqv/pcHWNZz9TZ03JladFzSSf/JfJiUZH9cgvN2W3MyIfFQXHOBlYifEtF9/eMM+N6p/aL
        2qM4eUPEQ4dwCBb7fjCgrq2UImDI8nODUb4j93Xe3XxBWl6grrUbw25XAM49d7PXJ0AMUJLcDI1naGA0
        kUgYAGNva7GLt6TT2DMBI1BoPqvSx0IhDkF0CPI073ZO5O/klUeZoJXu6zbDWIuT0SAO4yi0XSLKVHkG
        b4/bLjV7sc/gOYPnPuDA2i3blqMIWc2+oEallRW+/Srvdk56RJtWIrdtEZ/XaW+7oIbhGHDDOAZNYMWC
        N0nQBLiP5xFoDrgkwoxBn2TYNDs9RWn2Vu3nXT4sfcKMlapPyhvROQHHH5fGYWyAoxCwAxu/JqkjRMC0
        RLRpxCseMoUskyxqtIt3tbDcq/jgSNTvc9mvtJJU9QM9eJAy8gVRaD+cG/1K2SRSE1BV7y7lzRcXeUne
        k6iFFwUN4VRaOKMAcfrv0xusZ06RwnPT587KedPF5ZYoa5m6rvLHaDAYQctqSLfgxCTfcfAg9zPQo5Lc
        zJsovBq5t6pqKpJzsqDcyc9epa7dcwGtGpppbrLBUQCOnNBh4hyQtiWFJTWhoGkEUXoG+4wIQmPiD/cW
        CFJ5d/NlIC97lfbApxeRe99M829WGJNOmoCjADQ59X18TQKQ3z48J19EcGFOxAhiDjsdNIbuBO9yvmA4
        PsIcmOmBXguMuuHgHjADP4hIt2b5vXfveBwdl3sQhAwXaeFk0QGLgksw7bagVmWSbRek827nBMPxkqu7
        k0wyNVJW0ocgEqCHsVWav3nWr5AyKCgF3KiNCnsGQNJF0hbVfVlni4fDs+aTP+ik2wVP8W7nC7pH6Oq6
        buAouxvXRReMlfh8Fn1uZfQaH4aoHo5+Crson+3i76SFRwGr2VftwjXBWE43auRFwld4d48WRUneeueN
        q6qwk3KoanbrvcODjtkpS1hVvauS7Hdkp6filj0ept0B5/UOrf7QfioWYjnLqRNS+c78Z5JOFhN8icD1
        9w0zSQdHOTgEque3knJTsDENHdMaY5kJvBPAVW2EzbP89tIE/wuCiWP1ncrSwqOowWP9WW+s6c587Qnw
        ONarpXlZaxD42Pi3h/6UFuS8yJs9LFc3vpyGIh0BTaALiAGZ3klA+p3cllbgBOSK9gJyTU8Bsm8BZG8E
        kO77CzSC4mSAlg1rl6NQ5XhwBrqdgHUn9C0whDUp5CQwAR1+k/U0NBlE8odDLkQlNHmvF+sr0E3gvWSA
        pUrDuueXgeVgBU8a//vRk5uUlJR/AOLLXGpcXtnwAAAAAElFTkSuQmCC
</value>
  </data>
</root>